{"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x01-ES6_promise/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/alx-backend-javascript/0x01-ES6_promise\",\"filename\":\"/alx-backend-javascript/0x01-ES6_promise/0-promise.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x01-ES6_promise\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.5:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction getResponseFromAPI() {\n  return new Promise((resolve, reject) => {\n    // Your API logic here\n    // You can make asynchronous calls, such as fetching data from an API\n\n    // If the API call is successful, resolve the promise with the response data\n    const response = {\n      message: \"API response\"\n    };\n    resolve(response);\n\n    // If there's an error in the API call, reject the promise with an error message\n    // const error = \"API error\";\n    // reject(error);\n  });\n}\nvar _default = getResponseFromAPI;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRSZXNwb25zZUZyb21BUEkiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlc3BvbnNlIiwibWVzc2FnZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6Ii9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LzB4MDEtRVM2X3Byb21pc2UvIiwic291cmNlcyI6WyIwLXByb21pc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0UmVzcG9uc2VGcm9tQVBJKCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIC8vIFlvdXIgQVBJIGxvZ2ljIGhlcmVcbiAgICAvLyBZb3UgY2FuIG1ha2UgYXN5bmNocm9ub3VzIGNhbGxzLCBzdWNoIGFzIGZldGNoaW5nIGRhdGEgZnJvbSBhbiBBUElcbiAgICBcbiAgICAvLyBJZiB0aGUgQVBJIGNhbGwgaXMgc3VjY2Vzc2Z1bCwgcmVzb2x2ZSB0aGUgcHJvbWlzZSB3aXRoIHRoZSByZXNwb25zZSBkYXRhXG4gICAgY29uc3QgcmVzcG9uc2UgPSB7IG1lc3NhZ2U6IFwiQVBJIHJlc3BvbnNlXCIgfTtcbiAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgICBcbiAgICAvLyBJZiB0aGVyZSdzIGFuIGVycm9yIGluIHRoZSBBUEkgY2FsbCwgcmVqZWN0IHRoZSBwcm9taXNlIHdpdGggYW4gZXJyb3IgbWVzc2FnZVxuICAgIC8vIGNvbnN0IGVycm9yID0gXCJBUEkgZXJyb3JcIjtcbiAgICAvLyByZWplY3QoZXJyb3IpO1xuICB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0UmVzcG9uc2VGcm9tQVBJO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxTQUFTQSxrQkFBa0JBLENBQUEsRUFBRztFQUM1QixPQUFPLElBQUlDLE9BQU8sQ0FBQyxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sS0FBSztJQUN0QztJQUNBOztJQUVBO0lBQ0EsTUFBTUMsUUFBUSxHQUFHO01BQUVDLE9BQU8sRUFBRTtJQUFlLENBQUM7SUFDNUNILE9BQU8sQ0FBQ0UsUUFBUSxDQUFDOztJQUVqQjtJQUNBO0lBQ0E7RUFDRixDQUFDLENBQUM7QUFDSjtBQUFDLElBQUFFLFFBQUEsR0FFY04sa0JBQWtCO0FBQUFPLE9BQUEsQ0FBQUMsT0FBQSxHQUFBRixRQUFBIn0=","map":{"version":3,"names":["getResponseFromAPI","Promise","resolve","reject","response","message","_default","exports","default"],"sourceRoot":"/alx-backend-javascript/0x01-ES6_promise/","sources":["0-promise.js"],"sourcesContent":["function getResponseFromAPI() {\n  return new Promise((resolve, reject) => {\n    // Your API logic here\n    // You can make asynchronous calls, such as fetching data from an API\n    \n    // If the API call is successful, resolve the promise with the response data\n    const response = { message: \"API response\" };\n    resolve(response);\n    \n    // If there's an error in the API call, reject the promise with an error message\n    // const error = \"API error\";\n    // reject(error);\n  });\n}\n\nexport default getResponseFromAPI;\n"],"mappings":";;;;;;AAAA,SAASA,kBAAkBA,CAAA,EAAG;EAC5B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC;IACA;;IAEA;IACA,MAAMC,QAAQ,GAAG;MAAEC,OAAO,EAAE;IAAe,CAAC;IAC5CH,OAAO,CAACE,QAAQ,CAAC;;IAEjB;IACA;IACA;EACF,CAAC,CAAC;AACJ;AAAC,IAAAE,QAAA,GAEcN,kBAAkB;AAAAO,OAAA,CAAAC,OAAA,GAAAF,QAAA"}},"mtime":1687941573790}}